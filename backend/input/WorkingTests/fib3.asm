{"input_code":".text\n_start:\n        # Load n from memory (assume at address 0x10010000)\n        lui     x16, 0x10010       # x16 = upper part of 0x10010000\n        lw      x10, 0(x16)        # x10 = n\n\n        # Initialize fib(0) = 0, fib(1) = 1\n        addi    x11, x0, 1         # fib(i-1) = 1\n        addi    x12, x0, 0         # fib(i-2) = 0\n        addi    x13, x0, 2         # i = 2\n\n        # Memory pointer for storing results (0x10010004)\n        addi    x15, x16, 4\n        sw      x12, 0(x15)        # store fib(0)\n        sw      x11, 4(x15)        # store fib(1)\n\n        # if n <= 2, skip loop\n        addi    x17, x0, 2\n        bge     x17, x10, done     # if n <= 2, jump to done\n\nloop:\n        add     x14, x11, x12      # fib(i) = fib(i-1) + fib(i-2)\n\n        # store fib(i)\n        slli    x18, x13, 2        # offset = i * 4\n        add     x19, x15, x18\n        sw      x14, 0(x19)\n\n        # Update fib(i-2) and fib(i-1)\n        addi      x12, x11, 0\n        addi      x11, x14, 0\n\n        addi    x13, x13, 1        # i++\n\n        blt     x13, x10, loop     # if i < n, continue\n\ndone:\n        # Exit (in simulators you might just use an infinite loop)\n        jal ra, done"}